<section class="content-header">
  <h1>
    Project
    <small>List</small>
  </h1>
  <ol class="breadcrumb">
    <li><a href="#"><i class="fa fa-dashboard"></i> Level</a></li>
    <li class="active">Here</li>
  </ol>
</section>
<section class="content">
  <%= form_for :project, url: projects_path, method: :post do |f| %>
    <div class="form-group">
      <%= f.label :name %>
      <%= f.text_field :name, placeholder: "Project Nane", class: "form-control", required: true %>
    </div>
    <div class="form-group">
        <label for="tags2">Skills</label>
        <input type="text" class="form-control tag-input narrow" name="skill_tag" id="tags3" placeholder="Enter Skills" value="">
    </div>
    <div class="form-group">
      <%= f.label :description %>
      <%= f.text_field :description, placeholder: "Description", class: "form-control", required: true %>
    </div>
    <div class="form-group">
      <%= f.submit class: "btn btn-primary" %>
    </div>
  <%end%>
</section>


<script type="text/javascript">

  $(function(){

      // Instantiate the Bloodhound suggestion engine
      var tags = new Bloodhound({
          datumTokenizer: function(d) { return Bloodhound.tokenizers.whitespace(d.tag); },
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          local: [
            <% @skills.each do |skill| %>
              { tag: '<%= skill.name %>' },
            <%end%>
          ]
      });

      tags.initialize();

      // Set up an on-screen console for the demo
      var screenConsole = $('#console');

      // Write callback data to the screen when tags are added or removed in demo inputs
      var logCallbackDataToConsole = function(added, removed) {
          screenConsole.append('Tag Data: ' + (this.val() || null) + ', Added: ' + added + ', Removed: ' + removed + '\n');
      };

      // Create typeahead-enabled tag inputs
      $('.tag-input').tagInput({
          allowDuplicates: false,
          typeahead: true,
          typeaheadOptions: {
              highlight: true
          },
          typeaheadDatasetOptions: {
              displayKey: 'tag',
              source: tags.ttAdapter()
          },
          onTagDataChanged: logCallbackDataToConsole
      });

      // Create basic tag inputs with no typeahead
      $('.tag-input-basic').tagInput({
          onTagDataChanged: logCallbackDataToConsole
      });

      $('#results a[rel="external"]').attr('target', '_blank');

  });

</script>