<div class="modal-dialog">

  <!-- Modal content-->
  <div class="modal-content">
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal">&times;</button>
      <h4 class="modal-title">Project Details</h4>
    </div>
    <div class="modal-body">
      <div class="errors"></div>
      <%= form_for project, url: portal_project_create_path(project), method: :post, remote: true do |f| %>
        <div class="form-group">
          <label for="project_name">Project Name:</label>
          <%= f.text_field :name, class: "form-control", required: true %>
          <%= f.hidden_field :is_active, value: false %>
        </div>

        <div class="form-group">
          <label for="client_name">Client Name:</label>
          <%= f.select :client_id, options_for_select(Client.active_clients.map{|c| [c.name?, c.id]},project.client_id), {prompt: "Select Client"} ,{class: "form-control",required: true } %>
        </div>

        <div class="form-group">
          <label for="tags2">Skills</label>
          <input type="text" class="form-control tag-input narrow" name="skill_tag" id="tags3" placeholder="Enter Skills" value="">
        </div>

        <div class="form-group">
          <label for="description">Description:</label>
          <%= f.text_field :description, class: "form-control",required: true  %>
        </div>

        <div class="form-group">
          <%= f.submit class: "btn btn-primary btn-lg btn-block it-btn-them" %>
        </div>
      <%end%>

    </div>
  </div>
</div>


<script type="text/javascript">

  $(function(){

      // Instantiate the Bloodhound suggestion engine
      var tags = new Bloodhound({
          datumTokenizer: function(d) { return Bloodhound.tokenizers.whitespace(d.tag); },
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          local: [
            <% Skill.all.each do |skill| %>
              { tag: '<%= skill.name %>' },
            <%end%>
          ]
      });

      tags.initialize();

      // Set up an on-screen console for the demo
      var screenConsole = $('#console');

      // Write callback data to the screen when tags are added or removed in demo inputs
      var logCallbackDataToConsole = function(added, removed) {
          screenConsole.append('Tag Data: ' + (this.val() || null) + ', Added: ' + added + ', Removed: ' + removed + '\n');
      };

      // Create typeahead-enabled tag inputs
      $('.tag-input').tagInput({
          allowDuplicates: false,
          typeahead: true,
          typeaheadOptions: {
            highlight: true
          },
          typeaheadDatasetOptions: {
            displayKey: 'tag',
            source: tags.ttAdapter()
          },
          onTagDataChanged: logCallbackDataToConsole
      });

      // Create basic tag inputs with no typeahead
      $('.tag-input-basic').tagInput({
          onTagDataChanged: logCallbackDataToConsole
      });

      $('#results a[rel="external"]').attr('target', '_blank');

  });

</script>